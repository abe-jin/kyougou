import { createContext, useState, useEffect } from 'react'

export const translations = {
  en: {
    dashboardTitle: 'Price Dashboard',
    product: 'Product',
    latestPrice: 'Latest Price',
    lowestPrice: 'Lowest Price',
    compareTitle: 'Competitor Comparison',
    marketShare: 'Market Share',
    priceDivergence: 'Price Divergence',
    diffFromMin: 'Diff from Min',
    manageTitle: 'Manage Products',
    addProduct: 'Add Product',
    rollback: 'Rollback Last Change',
    name: 'name',
    url: 'url',
    interval: 'interval',
    dropPercent: 'drop %',
    belowPrice: 'below price',
    category: 'category',
    nameSelector: 'name selector',
    priceSelector: 'price selector',
    reviewSelector: 'review selector',
    ratingSelector: 'rating selector',
    rankSelector: 'rank selector',
    trendSelector: 'trend selector',
    autoDetect: 'Auto Detect',
    notify: 'notify',
    owner: 'owner',
    actions: 'Actions',
    pause: 'Pause',
    resume: 'Resume',
    run: 'Run',
    paused: 'Paused',
    priceSimulation: 'Price Simulation',
    simulate: 'Simulate',
    test: 'Test',
    result: 'Result',
    minCompetitorPrice: 'Min competitor price',
    suggestedPrice: 'Suggested price',
    save: 'Save',
    delete: 'Delete',
    productsTitle: 'Products',
    reviews: 'Reviews',
    rating: 'Rating',
    rank: 'Rank',
    trend: 'Trend',
    helpTitle: 'Help Center',
    askQuestion: 'Type a question',
    send: 'Send',
    you: 'You',
    help: 'Help',
    generateReport: 'Generate Report',
    monthly: 'Monthly',
    yearly: 'Yearly',
    generate: 'Generate',
    categoryReport: 'Category',
    reports: 'Reports',
    comment: 'Comment',
    addComment: 'Add Comment',
    approve: 'Approve',
    approved: 'Approved',
    pendingApprovals: 'Pending Approvals',
    oldPrice: 'Old Price',
    newPrice: 'New Price',
    period: 'period',
    customize: 'Customize Dashboard',
    showLatest: 'Show Latest',
    showLowest: 'Show Lowest',
    showChart: 'Show Chart',
    selectorSuggestions: 'Selector Suggestions',
    fixSelectors: 'Fix Selectors',
    saveAndRun: 'Save & Run',
    retry: 'Retry',
    bulkEdit: 'Bulk Edit',
    applyBulk: 'Apply Bulk',
    applyTemplate: 'Apply Template',
    chooseTemplate: 'Choose Template',
    select: 'Select',
    dashboard: 'Dashboard',
    manageMenu: 'Manage',
    compare: 'Compare',
    logout: 'Logout',
    settings: 'Settings',
    searchPlaceholder: 'Search'
  },
  ja: {
    dashboardTitle: '価格ダッシュボード',
    product: '商品',
    latestPrice: '最新価格',
    lowestPrice: '最安値',
    compareTitle: '競合比較',
    marketShare: '市場シェア',
    priceDivergence: '価格乖離',
    diffFromMin: '最安値との差額',
    manageTitle: '商品管理',
    addProduct: '商品追加',
    rollback: '直前に戻す',
    name: '商品名',
    url: 'URL',
    interval: '取得間隔',
    dropPercent: '値下げ率',
    belowPrice: '下限価格',
    category: 'カテゴリ',
    nameSelector: '商品名セレクタ',
    priceSelector: '価格セレクタ',
    reviewSelector: 'レビュー数セレクタ',
    ratingSelector: '評価セレクタ',
    rankSelector: 'ランキングセレクタ',
    trendSelector: 'トレンドセレクタ',
    autoDetect: '自動推定',
    notify: '通知先',
    owner: '担当者',
    actions: '操作',
    pause: '一時停止',
    resume: '再開',
    run: '実行',
    paused: '停止中',
    priceSimulation: '価格シミュレーション',
    simulate: '試算',
    test: 'テスト',
    result: '結果',
    minCompetitorPrice: '競合最安値',
    suggestedPrice: '推奨価格',
    save: '保存',
    delete: '削除',
    productsTitle: '商品一覧',
    helpTitle: 'ヘルプ',
    askQuestion: '質問を入力',
    send: '送信',
    you: 'あなた',
    help: 'ヘルプ',
    generateReport: 'レポート生成',
    monthly: '月次',
    yearly: '年次',
    generate: '生成',
    categoryReport: 'カテゴリ',
    reports: 'レポート一覧',
    comment: 'コメント',
    addComment: 'コメント追加',
    approve: '承認',
    approved: '承認済み',
    pendingApprovals: '承認待ち商品',
    oldPrice: '現価格',
    newPrice: '新価格',
    period: '期間',
    customize: '表示設定',
    showLatest: '最新価格を表示',
    showLowest: '最安値を表示',
    showChart: 'グラフを表示',
    reviews: 'レビュー数',
    rating: '評価',
    rank: 'ランキング',
    trend: 'トレンド',
    selectorSuggestions: 'セレクタ候補',
    fixSelectors: 'セレクタ修正',
    saveAndRun: '保存して再取得',
    retry: '再取得',
    bulkEdit: '一括編集',
    applyBulk: '一括適用',
    applyTemplate: 'テンプレート適用',
    chooseTemplate: 'テンプレート選択',
    select: '選択',
    dashboard: 'ダッシュボード',
    manageMenu: '商品管理',
    compare: '比較',
    logout: 'ログアウト',
    settings: '設定',
    searchPlaceholder: '検索'
  }
}

export const LangContext = createContext({ lang: 'en', setLang: () => {}, t: (k) => k })

export function LangProvider({ children }) {
  const [lang, setLangState] = useState('en')
  useEffect(() => {
    const stored = typeof window !== 'undefined' && localStorage.getItem('lang')
    if (stored) setLangState(stored)
  }, [])
  const setLang = (l) => {
    setLangState(l)
    if (typeof window !== 'undefined') {
      localStorage.setItem('lang', l)
    }
  }
  const t = (key) => translations[lang][key] || key
  return (
    <LangContext.Provider value={{ lang, setLang, t }}>
      {children}
    </LangContext.Provider>
  )
}